#  Copyright (c) 2025 The Ontario Institute for Cancer Research. All rights reserved
#
#  This program and the accompanying materials are made available under the terms of
#  the GNU Affero General Public License v3.0. You should have received a copy of the
#  GNU Affero General Public License along with this program.
#   If not, see <http://www.gnu.org/licenses/>.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#  SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
#  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Description of Submission API

/submission/{submissionId}:
  get:
    summary: Get active submission by ID
    tags:
      - Submission
    parameters:
      - name: submissionId
        in: path
        type: string
        required: true
    responses:
      200:
        description: Active Submission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveSubmissionResult'

      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

  delete:
    summary: Clear an Active Submission by ID
    tags:
      - Submission
    parameters:
      - name: submissionId
        in: path
        type: string
        required: true
    responses:
      200:
        description: Submission cleared successfully. Returns the current Active Submission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/StatusConflict'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/{submissionId}/{actionType}:
  delete:
    summary: Clear Active Submission by entity name
    tags:
      - Submission
    parameters:
      - name: submissionId
        in: path
        type: string
        required: true
        description: The ID of the Submission
      - name: actionType
        in: path
        required: true
        schema:
          type: string
          enum: [inserts, updates, deletes]
        description: Parameter to specify the type of record to remove from the Submission. Must be one of `inserts`, `updates`, or `deletes` (case insensitive)
      - name: entityName
        in: query
        type: string
        required: true
        description: The name of the entity
      - name: index
        in: query
        required: false
        schema:
          type: integer
        description: An optional query parameter used to specify the index of the item within the submission type to be deleted. <br />If not provided all the items within the submission type will be deleted.
    responses:
      200:
        description: Submission cleared successfully. Returns the current Active Submission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/StatusConflict'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/category/{categoryId}:
  get:
    summary: Retrieve the Active Submissions for a category in this user session
    tags:
      - Submission
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
      - $ref: '#/components/parameters/query/Page'
      - $ref: '#/components/parameters/query/PageSize'
      - $ref: '#/components/parameters/query/OnlyActive'
      - $ref: '#/components/parameters/query/OrganizationFilter'
    responses:
      200:
        description: Active Submissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveSubmissionsSummaryResult'

      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/category/{categoryId}/organization/{organization}:
  get:
    summary: Retrieve the Active Submission for a category and organization in this user session
    tags:
      - Submission
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
      - $ref: '#/components/parameters/path/Organization'
    responses:
      200:
        description: Active Submission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveSubmissionSummaryResult'

      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/category/{categoryId}/commit/{submissionId}:
  post:
    summary: Commit Active Submission
    tags:
      - Submission
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
      - name: submissionId
        in: path
        type: string
        required: true
    responses:
      200:
        description: Commit Submission Result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      409:
        $ref: '#/components/responses/StatusConflict'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/category/{categoryId}/data:
  post:
    summary: Add new data to a submission for the specified category. Returns an Active Submission containing the newly created records
    tags:
      - Submission
    consumes:
      - multipart/form-data
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  type: string
                  format: binary
              organization:
                type: string
            required:
              - files
              - organization
    responses:
      200:
        description: Submission accepted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'
  put:
    summary: Modifies existing data for a submission. Returns an Active Submission containing the records that will be updated
    tags:
      - Submission
    consumes:
      - multipart/form-data
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  type: string
                  format: binary
              organization:
                type: string
            required:
              - files
              - organization
    responses:
      200:
        description: Edit Data request accepted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'

/submission/category/{categoryId}/data/{systemId}:
  delete:
    summary: Removes data from a submission using the System ID. Returns an Active Submission containing the records that will be deleted
    tags:
      - Submission
    parameters:
      - $ref: '#/components/parameters/path/CategoryId'
      - name: systemId
        in: path
        required: true
        schema:
          type: string
        description: The unique system ID of the data to be deleted
    responses:
      200:
        description: Delete Data request accepted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmissionResult'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/StatusConflict'
      500:
        $ref: '#/components/responses/ServerError'
      503:
        $ref: '#/components/responses/ServiceUnavailableError'
